# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt
  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
#           - os: macos-latest
#             TARGET: macos
#             CMD_BUILD: >
#                 pyinstaller pzero.spec &&
#                 cd dist/ &&
#                 zip -r9 pzero pzero.app/                
#             OUT_FILE_NAME: pzero.zip
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller pzero.spec
            OUT_FILE_NAME: pzero.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
            USE_CONDA: true
#           - os: ubuntu-latest
#             TARGET: ubuntu
#             CMD_BUILD: pyinstaller pzero.spec
#             OUT_FILE_NAME: pzero
#             USE_CONDA: false
            

    steps:
      # Check-out repository
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
      
      - name: Setup Miniconda
        if: ${{matrix.USE_CONDA}}
        uses: conda-incubator/setup-miniconda@v2.2.0
        with:
          miniconda-version: "latest"
          auto-update-conda: true
          activate-environment: 'pzero'
          environment-file: 'environment.yml'
          python-version: 3.9
          auto-activate-base: false
          channels: conda-forge
      - name: Setup pip
        if: ${{!matrix.USE_CONDA}}
        run: |
            python -m pip install --upgrade pip
            python -m pip install -r requirements.txt
#       - name: Install dependencies
#         run: |
#             python -m pip install --upgrade pip
#             pip install pyinstaller
      - name: Run pyinstaller for ${{matrix.TARGET}}
        run: ${{matrix.CMD_BUILD}}
        
      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Get Release File Name & Upload URL
        id: get_release_info
        shell: bash
        run: |
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value        
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
          asset_name: ${{ matrix.OUT_FILE_NAME}}
          asset_content_type: ${{ matrix.ASSET_MIME}}
