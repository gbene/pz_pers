# This is a basic workflow to help you get started with Actions

name: Build from source

# Controls when the workflow will run
on:
#   # Triggers the workflow on push or pull request events but only for the "main" branch
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  build:
    name: Build packages for ${{ matrix.TARGET }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
#           - os: macos-latest
#             TARGET: macos
#             CMD_BUILD: >
#                 pyinstaller pzero.spec &&
#                 cd dist/ &&
#                 zip -r9 pzero pzero.app/                
#             OUT_FILE_NAME: pzero.zip
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller pzero.spec
            OUT_FILE_NAME: pzero.exe
            USE_CONDA: true
#           - os: ubuntu-latest
#             TARGET: ubuntu
#             CMD_BUILD: pyinstaller pzero.spec
#             OUT_FILE_NAME: pzero
#             USE_CONDA: false
            

    steps:
      # Check-out repository
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
      
      - name: Setup Miniconda
        if: ${{matrix.USE_CONDA}}
        uses: conda-incubator/setup-miniconda@v2.2.0
        with:
          miniconda-version: "latest"
          auto-update-conda: true
          activate-environment: 'pzero'
          environment-file: 'environment.yml'
          python-version: 3.9
          auto-activate-base: false
          channels: conda-forge
      - name: Setup pip
        if: ${{!matrix.USE_CONDA}}
        run: |
            python -m pip install --upgrade pip
            python -m pip install -r requirements.txt
#       - name: Install dependencies
#         run: |
#             python -m pip install --upgrade pip
#             pip install pyinstaller
      - name: Run pyinstaller for ${{matrix.TARGET}}
        run: ${{matrix.CMD_BUILD}}
          
      # Uploads artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.OUT_FILE_NAME}}
          path: dist/${{matrix.OUT_FILE_NAME}}
